//
// Copyright 2020 DxOS.org
//

import { Config } from '@dxos/config';

// Generated by webpack-version-file-plugin.
// eslint-disable-next-line import/no-unresolved
import buildInfo from '../version.json';

// Default app constants.
import defaults from '../config/defaults.yml';

// Provided by webpack plugin.
// eslint-disable-next-line import/no-unresolved
import stackConfig from '../config/stack/__STACK_CONFIG__.yml';

// User configurable.
const storedConfig = localStorage.options && JSON.parse(localStorage.options);

// Environment variables.
const envConfig = {
  app: {
    publicUrl: process.env.PUBLIC_URL
  },

  debug: {
    mode: process.env.NODE_ENV,
    stack: process.env.STACK_CONFIG,
    logging: process.env.DEBUG || undefined
  }
};

/**
 * Constructs a global config based on the precendence of other configurations.
 * NOTE: We do not use environment variables.
 *
 * The order of precedence:
 * - Stored config (e.g., user configurable options).
 * - Build-target specific config (e.g., servers).
 * - App-specific defaults and constants.
 * - Build info (generated by webpack).
 *
 * TODO(burdon): Define global schema (across all apps/modules).
 * @returns {Object}
 */
const config = new Config(buildInfo, defaults, stackConfig, storedConfig, envConfig);

export default config;
